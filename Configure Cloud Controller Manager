Tag AWS Resources:
=====================

Tagging is essential to configure the Cloud Controller Manager because it ensures which AWS resources are used by which cluster.

For example, if a cluster uses AWS Network Load Balancer and now the cluster is being destroyed, the specified NLB also be destroyed and not affect other resources. To tag the resource, the cluster-ID is required

To find the Cluster ID, use the following command.
---------------------------------------------------------

kubectl config view

=========================================
The output would be like this:
----------------------------------------
apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: DATA+OMITTED
    server: https://172.31.21.29:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: kubernetes-admin
  name: kubernetes-admin@kubernetes
current-context: kubernetes-admin@kubernetes
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: DATA+OMITTED
    client-key-data: DATA+OMITTED
=========================================================================================================

In the clusters section, the value of name is taken as the Cluster ID.

If the AWS resources are managed by one cluster, we can provide the tag key kubernetes.io/cluster/kubernetes and the tag value as owned and if the resources are managed by multiple clusters,
the tag key would be the same as kubernetes.io/cluster/kubernetes and the tag value should be mentioned as shared.

Tags should be added to resourecs the controller and worker node consumes, such as VPC, Subnet, EC2 instance, Security Group, etc.

===================================================================================================================================================================================================

1. Clone the AWS Cloud Controller repository to the controller plane node where you have the Kubectl access.

-------------------------------------------------------------------------

git clone https://github.com/kubernetes/cloud-provider-aws.git

=======================================================================

2. Navigate to the base directory.It has all the kubernetes manifests for the cloud controller manager and the Kustomize file.
3. Create the daemonset using the following command. -k is for Kustomize.
---------------------------------------------------------------------------

cd cloud-provider-aws/examples/existing-cluster/base

kubectl create -k .
==============================================================================\

To verify the daemonset is running properly, use the following command.
-------------------------------------------------------------------------

kubectl get daemonset -n kube-system

==========================================================================

To ensure the CCM pod is running, use the following command.

---------------------------------------------------------------------------
kubectl get pods -n kube-system
==============================================================================
